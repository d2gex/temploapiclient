[{"path":"https://d2gex.github.io/temploapiclient/articles/station_and_receptors.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"station_and_receptors","text":"Ensure temploapiclient package installed available vignette. can calling pkgdown::build_site(), also generate docs folder simply calling install.packages().","code":"project_folder <- dirname(getwd()) path_to_env <- file.path(project_folder, \".env\") library(\"magrittr\") # Make '%>%' available throughout the vignette"},{"path":"https://d2gex.github.io/temploapiclient/articles/station_and_receptors.html","id":"api-credentials-reading","dir":"Articles","previous_headings":"","what":"API credentials reading","title":"station_and_receptors","text":"Let’s get base url API hosted hard-drive avoid pasting . let’s instantiate client query TEMPLO api","code":"readRenviron(path_to_env) api_base_url <- Sys.getenv(\"API_BASE_URL\") templo_client <- temploapiclient::TemploApiClient$new(api_base_url)"},{"path":"https://d2gex.github.io/temploapiclient/articles/station_and_receptors.html","id":"creating-stations-receptors-and-linking-both","dir":"Articles","previous_headings":"","what":"Creating stations, receptors and linking both","title":"station_and_receptors","text":"Stations receptors 1:N relationship one station associated multiple receptors. order build relationship following steps need taken chronological order: Add station already created. Add many receptors, one one, required. Link station potential associated receptors. Repeat 1 4 many stations required.","code":""},{"path":"https://d2gex.github.io/temploapiclient/articles/station_and_receptors.html","id":"creating-stations","dir":"Articles","previous_headings":"Creating stations, receptors and linking both","what":"Creating stations","title":"station_and_receptors","text":"Create new receptor give name “Cies 2”. something unexpected happens, error outputted. code commented record can inserted . Tough shown , successful, api call return record just inserted new generated id. chunk set run anymore can run . Set eval=TRUE want run , however remember provide different unique name. Ensure receptor sent stored database retrieving API.","code":"ret <- templo_client$add_single_record_and_fetch_id(end_point = \"stations/\", data = list(   name = \"Cies 2\",   description = \"Western area of cies\" )) api_data <- templo_client$get_dataframe_end_point(end_point = \"stations/\") #> INFO [2024-11-11 07:35:54] Fetching data from api... This may take a few seconds #> INFO [2024-11-11 07:35:55] --->Finished api_data %>%   dplyr::filter(name == \"Cies 2\") %>%   assertr::verify(nrow(.) == 1) # It will halt the execution and print an error if such record does not exist #>     name  id          description #> 1 Cies 2 198 Western area of cies"},{"path":"https://d2gex.github.io/temploapiclient/articles/station_and_receptors.html","id":"creating-receptors","dir":"Articles","previous_headings":"Creating stations, receptors and linking both","what":"Creating receptors","title":"station_and_receptors","text":"Receptors, besides name, requires unique string identify stored serial_id. receptors, new generated id returned successful. Otherwise, error printed.eval=FALSE prevents chunk running. Ensure station sent stored database retrieving API.","code":"serial_id <- stringi::stri_rand_strings(1, 10) ret <- templo_client$add_single_record_and_fetch_id(end_point = \"receptors/\", data = list(   name = \"Buoy C21\",   serial_id = serial_id,   description = \"Receptor set up on a buoy\" )) api_data <- templo_client$get_dataframe_end_point(end_point = \"receptors/\") #> INFO [2024-11-11 07:35:55] Fetching data from api... This may take a few seconds #> INFO [2024-11-11 07:35:55] --->Finished api_data %>%   dplyr::filter(name == \"Buoy C21\") %>%   assertr::verify(nrow(.) == 1) #>    serial_id id               description     name #> 1 sTMPrWTY6C  9 Receptor set up on a buoy Buoy C21"},{"path":"https://d2gex.github.io/temploapiclient/articles/station_and_receptors.html","id":"associating-receptors-to-stations","dir":"Articles","previous_headings":"Creating stations, receptors and linking both","what":"Associating receptors to stations","title":"station_and_receptors","text":"created receptors stations separately, may associate using table relate two, represented endpoint stations_receptors. Notice ’ve got picking ids returned earlier calls.eval=FALSE prevents chunk running. , demonstrative purposes, ensure association successfully implemented querying API.","code":"data <- list(   stations_id = 198, # station that we just created by the name of \"Cies 2\"   receptors_id = 9, # receptor stored as \"Buoy C21\"   is_active = TRUE, # it indicates the receptor is active   latitude = 42.2134,   longitude = -8.8987,   deployment_date = \"2024-11-07 08:25:00\" # Notice that dates are in yms_hms format ) ret <- templo_client$add_single_record_and_fetch_id(end_point = \"stations_receptors/\", data = data) api_data <- templo_client$get_dataframe_end_point(end_point = \"stations_receptors/\") #> INFO [2024-11-11 07:35:55] Fetching data from api... This may take a few seconds #> INFO [2024-11-11 07:35:55] --->Finished api_data %>%   dplyr::filter(stations_id == 198 & receptors_id == 9) %>%   assertr::verify(nrow(.) == 1) #>   stations_id     deployment_date is_active longitude receptors_id id latitude #> 1         198 2024-11-07T08:25:00      TRUE   -8.8987            9  7  42.2134 #>   notes #> 1  <NA>"},{"path":"https://d2gex.github.io/temploapiclient/articles/station_and_receptors.html","id":"errors-while-sending","dir":"Articles","previous_headings":"Creating stations, receptors and linking both","what":"Errors while sending","title":"station_and_receptors","text":"record can exist relational database trying twice error prompted. … miss required field name get “field required” error","code":"ret <- templo_client$add_single_record_and_fetch_id(end_point = \"stations/\", data = list(   name = \"Cies 2\", # name is an unique field and already exists in the database   description = \"Western area of cies\" )) #> INFO [2024-11-11 07:35:55] Sending data to  stations/ ... #> ERROR [2024-11-11 07:35:56] Detected a 'duplicate' keyword. You may have inserted a record that already exist      in the database. See error below. #> { #>   \"error\": [\"IntegrityError\"], #>   \"details\": [\"(MySQLdb.IntegrityError) (1062, \\\"Duplicate entry 'Cies 2' for key 'stations.name_UNIQUE'\\\")\"] #> }ERROR [2024-11-11 07:35:56] Data could not be send ret <- templo_client$add_single_record_and_fetch_id(end_point = \"stations/\", data = list(   description = \"Western area of cies\" )) #> INFO [2024-11-11 07:35:56] Sending data to  stations/ ... #> ERROR [2024-11-11 07:35:56] Detected a 'field required' keyword. You may be missing an essential field in your query. Look      'loc' section for clues #> { #>   \"detail\": [ #>     { #>       \"type\": [\"missing\"], #>       \"loc\": [ #>         [\"body\"], #>         [\"name\"] #>       ], #>       \"msg\": [\"Field required\"], #>       \"input\": { #>         \"description\": [\"Western area of cies\"] #>       } #>     } #>   ] #> }ERROR [2024-11-11 07:35:56] Data could not be send"},{"path":"https://d2gex.github.io/temploapiclient/articles/station_and_receptors.html","id":"deleting-a-record","dir":"Articles","previous_headings":"Creating stations, receptors and linking both","what":"Deleting a record","title":"station_and_receptors","text":"Let’s create new station delete right away. Let’s ensure record inserted database. Now let’s deleted… … , ensure record longer exists","code":"new_record <- templo_client$add_single_record_and_fetch_id(end_point = \"stations/\", data = list(   name = \"Cies 3\",   description = \"Eastern area of cies\" )) #> INFO [2024-11-11 07:35:56] Sending data to  stations/ ... #> INFO [2024-11-11 07:35:56] --->Finished new_record #> $name #> [1] \"Cies 3\" #>  #> $id #> [1] 326 #>  #> $description #> [1] \"Eastern area of cies\" api_data <- templo_client$get_dataframe_end_point(end_point = \"stations/\") #> INFO [2024-11-11 07:35:56] Fetching data from api... This may take a few seconds #> INFO [2024-11-11 07:35:56] --->Finished api_data %>%   dplyr::filter(name == \"Cies 3\") %>%   assertr::verify(nrow(.) == 1) #>     name  id          description #> 1 Cies 3 326 Eastern area of cies ret <- templo_client$delete_single_record(end_point = \"stations/\", data = list(   id = new_record$id )) #> INFO [2024-11-11 07:35:56] Deleting data from  stations/ ... #> INFO [2024-11-11 07:35:56] --->Finished ret #> [1] TRUE api_data <- templo_client$get_dataframe_end_point(end_point = \"stations/\") #> INFO [2024-11-11 07:35:56] Fetching data from api... This may take a few seconds #> INFO [2024-11-11 07:35:57] --->Finished api_data %>%   dplyr::filter(name == \"Cies 3\") %>%   assertr::verify(nrow(.) == 0) #> [1] name        id          description #> <0 rows> (or 0-length row.names)"},{"path":"https://d2gex.github.io/temploapiclient/articles/station_and_receptors.html","id":"fetching-environmental-readings","dir":"Articles","previous_headings":"","what":"Fetching environmental readings","title":"station_and_receptors","text":"Deployed receptors equipped sensors measure oceanographic variables temperature, pressure, etc… readings can obtained API . Readings generate fine time resolution advised fetch two o three days worth data time. Otherwise API call may time produce results whatsoever. hit interval time data produced empty dataset returned instead.","code":"api_data <- templo_client$get_environmental_readings(from_date = \"2024-10-10\", to_date = \"2024-10-12\") #> INFO [2024-11-11 07:35:57] Fetching environmental readings from  2024-10-10 to 2024-10-12 ... This may take a few seconds #> INFO [2024-11-11 07:35:59] --->Finished head(api_data) %>%   dplyr::rename(c(     variable = environmental_variable_name,     receptor = receptor_name,     station = station_name,     lat = latitude,     lon = longitude   )) %>%   dplyr::select(     station,     receptor,     lat,     lon,     variable,     reading_time,     value   ) #>   station receptor     lat       lon  variable        reading_time value #> 1    Cíes     Cíes 42.2107 -8.898333 FREQUENCY 2024-10-10 00:09:42    69 #> 2    Cíes     Cíes 42.2107 -8.898333 FREQUENCY 2024-10-10 00:19:42    69 #> 3    Cíes     Cíes 42.2107 -8.898333 FREQUENCY 2024-10-10 00:29:42    69 #> 4    Cíes     Cíes 42.2107 -8.898333 FREQUENCY 2024-10-10 00:39:42    69 #> 5    Cíes     Cíes 42.2107 -8.898333 FREQUENCY 2024-10-10 00:49:42    69 #> 6    Cíes     Cíes 42.2107 -8.898333 FREQUENCY 2024-10-10 00:59:42    69 api_data <- templo_client$get_environmental_readings(from_date = \"2024-01-01\", to_date = \"2024-02-02\") #> INFO [2024-11-11 07:35:59] Fetching environmental readings from  2024-01-01 to 2024-02-02 ... This may take a few seconds #> INFO [2024-11-11 07:35:59] --->Finished api_data %>%   assertr::verify(!nrow(.)) #> # A tibble: 0 × 0"},{"path":"https://d2gex.github.io/temploapiclient/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Dan G. Author, maintainer.","code":""},{"path":"https://d2gex.github.io/temploapiclient/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"G D (2024). temploapiclient: REST API client TEMPLO. R package version 1.0.0, https://d2gex.github.io/temploapiclient/.","code":"@Manual{,   title = {temploapiclient: REST API client for TEMPLO},   author = {Dan G},   year = {2024},   note = {R package version 1.0.0},   url = {https://d2gex.github.io/temploapiclient/}, }"},{"path":"https://d2gex.github.io/temploapiclient/index.html","id":"temploapiclient","dir":"","previous_headings":"","what":"REST API client for TEMPLO","title":"REST API client for TEMPLO","text":"small REST client consume TEMPLO’s API","code":""},{"path":"https://d2gex.github.io/temploapiclient/reference/FieldValidation.html","id":null,"dir":"Reference","previous_headings":"","what":"FieldValidatio class — FieldValidation","title":"FieldValidatio class — FieldValidation","text":"Provide validator certain relevant fields data needs send API","code":""},{"path":[]},{"path":"https://d2gex.github.io/temploapiclient/reference/FieldValidation.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"FieldValidatio class — FieldValidation","text":"FieldValidation$valid_sex() FieldValidation$valid_bool_vector() FieldValidation$validate_datetime() FieldValidation$check_na_fields() FieldValidation$clone()","code":""},{"path":"https://d2gex.github.io/temploapiclient/reference/FieldValidation.html","id":"method-valid-sex-","dir":"Reference","previous_headings":"","what":"Method valid_sex()","title":"FieldValidatio class — FieldValidation","text":"Validate sex column dataframe  positive integer","code":""},{"path":"https://d2gex.github.io/temploapiclient/reference/FieldValidation.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FieldValidatio class — FieldValidation","text":"","code":"FieldValidation$valid_sex(df, field)"},{"path":"https://d2gex.github.io/temploapiclient/reference/FieldValidation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FieldValidatio class — FieldValidation","text":"df dataframe values field field field name","code":""},{"path":"https://d2gex.github.io/temploapiclient/reference/FieldValidation.html","id":"method-valid-bool-vector-","dir":"Reference","previous_headings":"","what":"Method valid_bool_vector()","title":"FieldValidatio class — FieldValidation","text":"Validate values column indeed boolean equivalents","code":""},{"path":"https://d2gex.github.io/temploapiclient/reference/FieldValidation.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"FieldValidatio class — FieldValidation","text":"","code":"FieldValidation$valid_bool_vector(df, field)"},{"path":"https://d2gex.github.io/temploapiclient/reference/FieldValidation.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"FieldValidatio class — FieldValidation","text":"df dataframe values field field field name","code":""},{"path":"https://d2gex.github.io/temploapiclient/reference/FieldValidation.html","id":"method-validate-datetime-","dir":"Reference","previous_headings":"","what":"Method validate_datetime()","title":"FieldValidatio class — FieldValidation","text":"Validate values column either datetime ymd_hms format date ymd format.","code":""},{"path":"https://d2gex.github.io/temploapiclient/reference/FieldValidation.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"FieldValidatio class — FieldValidation","text":"","code":"FieldValidation$validate_datetime(df, field, is_datetime = TRUE)"},{"path":"https://d2gex.github.io/temploapiclient/reference/FieldValidation.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"FieldValidatio class — FieldValidation","text":"df dataframe values field field field name is_datetime boolean flag indicating whether check datetime date","code":""},{"path":"https://d2gex.github.io/temploapiclient/reference/FieldValidation.html","id":"method-check-na-fields-","dir":"Reference","previous_headings":"","what":"Method check_na_fields()","title":"FieldValidatio class — FieldValidation","text":"Check whether NA values columns given dataframe","code":""},{"path":"https://d2gex.github.io/temploapiclient/reference/FieldValidation.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"FieldValidatio class — FieldValidation","text":"","code":"FieldValidation$check_na_fields(df, col_names)"},{"path":"https://d2gex.github.io/temploapiclient/reference/FieldValidation.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"FieldValidatio class — FieldValidation","text":"df dataframe col_names character vector columnnames","code":""},{"path":"https://d2gex.github.io/temploapiclient/reference/FieldValidation.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"FieldValidatio class — FieldValidation","text":"objects class cloneable method.","code":""},{"path":"https://d2gex.github.io/temploapiclient/reference/FieldValidation.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"FieldValidatio class — FieldValidation","text":"","code":"FieldValidation$clone(deep = FALSE)"},{"path":"https://d2gex.github.io/temploapiclient/reference/FieldValidation.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"FieldValidatio class — FieldValidation","text":"deep Whether make deep clone.","code":""},{"path":"https://d2gex.github.io/temploapiclient/reference/IIMApiClient.html","id":null,"dir":"Reference","previous_headings":"","what":"IIMApiClient class — IIMApiClient","title":"IIMApiClient class — IIMApiClient","text":"Provides end--end queries required update details live acoustic telemetry system place","code":""},{"path":[]},{"path":"https://d2gex.github.io/temploapiclient/reference/IIMApiClient.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"IIMApiClient class — IIMApiClient","text":"IIMApiClient$new() IIMApiClient$post_data_to_api() IIMApiClient$delete_data_from_api() IIMApiClient$get_from_api() IIMApiClient$get_from_api_as_dataframe() IIMApiClient$clone()","code":""},{"path":[]},{"path":"https://d2gex.github.io/temploapiclient/reference/IIMApiClient.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IIMApiClient class — IIMApiClient","text":"","code":"IIMApiClient$new(api_url)"},{"path":"https://d2gex.github.io/temploapiclient/reference/IIMApiClient.html","id":"method-post-data-to-api-","dir":"Reference","previous_headings":"","what":"Method post_data_to_api()","title":"IIMApiClient class — IIMApiClient","text":"Post nested list database API.","code":""},{"path":"https://d2gex.github.io/temploapiclient/reference/IIMApiClient.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"IIMApiClient class — IIMApiClient","text":"","code":"IIMApiClient$post_data_to_api(obj, end_point)"},{"path":"https://d2gex.github.io/temploapiclient/reference/IIMApiClient.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"IIMApiClient class — IIMApiClient","text":"obj nested list resulting applying NestedListBuilder end_point string name end point queried. Default \"tags_with_sensors/\"","code":""},{"path":"https://d2gex.github.io/temploapiclient/reference/IIMApiClient.html","id":"method-delete-data-from-api-","dir":"Reference","previous_headings":"","what":"Method delete_data_from_api()","title":"IIMApiClient class — IIMApiClient","text":"Delete single record database API","code":""},{"path":"https://d2gex.github.io/temploapiclient/reference/IIMApiClient.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"IIMApiClient class — IIMApiClient","text":"","code":"IIMApiClient$delete_data_from_api(obj, end_point)"},{"path":"https://d2gex.github.io/temploapiclient/reference/IIMApiClient.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"IIMApiClient class — IIMApiClient","text":"obj flat list ids unique field identifies record erased end_point string name end point queried. Default \"tags_with_sensors/\"","code":""},{"path":"https://d2gex.github.io/temploapiclient/reference/IIMApiClient.html","id":"method-get-from-api-","dir":"Reference","previous_headings":"","what":"Method get_from_api()","title":"IIMApiClient class — IIMApiClient","text":"Make request API return data json object.","code":""},{"path":"https://d2gex.github.io/temploapiclient/reference/IIMApiClient.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"IIMApiClient class — IIMApiClient","text":"","code":"IIMApiClient$get_from_api(end_point)"},{"path":"https://d2gex.github.io/temploapiclient/reference/IIMApiClient.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"IIMApiClient class — IIMApiClient","text":"end_point string name end point queried. Default \"tags_with_sensors/\" obj nested list resulting applying NestedListBuilder","code":""},{"path":[]},{"path":"https://d2gex.github.io/temploapiclient/reference/IIMApiClient.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"IIMApiClient class — IIMApiClient","text":"","code":"IIMApiClient$get_from_api_as_dataframe(end_point, parameters = NULL)"},{"path":"https://d2gex.github.io/temploapiclient/reference/IIMApiClient.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"IIMApiClient class — IIMApiClient","text":"objects class cloneable method.","code":""},{"path":"https://d2gex.github.io/temploapiclient/reference/IIMApiClient.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"IIMApiClient class — IIMApiClient","text":"","code":"IIMApiClient$clone(deep = FALSE)"},{"path":"https://d2gex.github.io/temploapiclient/reference/IIMApiClient.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"IIMApiClient class — IIMApiClient","text":"deep Whether make deep clone.","code":""},{"path":"https://d2gex.github.io/temploapiclient/reference/NestedListBuilder.html","id":null,"dir":"Reference","previous_headings":"","what":"NestedListBuilder class — NestedListBuilder","title":"NestedListBuilder class — NestedListBuilder","text":"Convert dataframes nested lists according required case","code":""},{"path":"https://d2gex.github.io/temploapiclient/reference/NestedListBuilder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NestedListBuilder class — NestedListBuilder","text":"nested list element root level contains details tag sensor details. nested list element root level contains details tagged individual.","code":""},{"path":[]},{"path":"https://d2gex.github.io/temploapiclient/reference/NestedListBuilder.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"NestedListBuilder class — NestedListBuilder","text":"NestedListBuilder$build_tag_with_sensor_list() NestedListBuilder$build_tagged_individual_list() NestedListBuilder$clone()","code":""},{"path":"https://d2gex.github.io/temploapiclient/reference/NestedListBuilder.html","id":"method-build-tag-with-sensor-list-","dir":"Reference","previous_headings":"","what":"Method build_tag_with_sensor_list()","title":"NestedListBuilder class — NestedListBuilder","text":"Given dataframe tag sensor details, returns 4-level nested list containing details tag along sensor details.","code":""},{"path":"https://d2gex.github.io/temploapiclient/reference/NestedListBuilder.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NestedListBuilder class — NestedListBuilder","text":"","code":"NestedListBuilder$build_tag_with_sensor_list(   df,   tag_prefix,   sensor_prefix,   root_field_names )"},{"path":"https://d2gex.github.io/temploapiclient/reference/NestedListBuilder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NestedListBuilder class — NestedListBuilder","text":"df dataframe tag sensor details tag_prefix string expected tag field prefix sensor_prefix string expected sensor field prefix root_field_names string vector names outer element built list","code":""},{"path":"https://d2gex.github.io/temploapiclient/reference/NestedListBuilder.html","id":"method-build-tagged-individual-list-","dir":"Reference","previous_headings":"","what":"Method build_tagged_individual_list()","title":"NestedListBuilder class — NestedListBuilder","text":"Given dataframe individual, tag sensor tagged_individual details returns 3-level nested list containing details","code":""},{"path":"https://d2gex.github.io/temploapiclient/reference/NestedListBuilder.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"NestedListBuilder class — NestedListBuilder","text":"","code":"NestedListBuilder$build_tagged_individual_list(   df,   ind_prefix,   tag_prefix,   sensor_prefix,   tagged_ind_prefix,   root_field_names )"},{"path":"https://d2gex.github.io/temploapiclient/reference/NestedListBuilder.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"NestedListBuilder class — NestedListBuilder","text":"df dataframe tag sensor details ind_prefix string expected individual field prefix tag_prefix string expected tag field prefix sensor_prefix string expected sensor field prefix tagged_ind_prefix string expected tagged_individual field prefix root_field_names string vector names outer element built list strict order (individual, tag, sensor)","code":""},{"path":"https://d2gex.github.io/temploapiclient/reference/NestedListBuilder.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"NestedListBuilder class — NestedListBuilder","text":"objects class cloneable method.","code":""},{"path":"https://d2gex.github.io/temploapiclient/reference/NestedListBuilder.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"NestedListBuilder class — NestedListBuilder","text":"","code":"NestedListBuilder$clone(deep = FALSE)"},{"path":"https://d2gex.github.io/temploapiclient/reference/NestedListBuilder.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"NestedListBuilder class — NestedListBuilder","text":"deep Whether make deep clone.","code":""},{"path":"https://d2gex.github.io/temploapiclient/reference/TemploApiClient.html","id":null,"dir":"Reference","previous_headings":"","what":"TemploApi class — TemploApiClient","title":"TemploApi class — TemploApiClient","text":"API client consume TEMPLO's API Add tag sensor details database.","code":""},{"path":"https://d2gex.github.io/temploapiclient/reference/TemploApiClient.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"TemploApi class — TemploApiClient","text":"TRUE FALSE record data sent plus unique identifier generated remote database dataframe sought information. dataframe sought information. TRUE successfully completed. Error message otherwise.","code":""},{"path":[]},{"path":"https://d2gex.github.io/temploapiclient/reference/TemploApiClient.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TemploApi class — TemploApiClient","text":"TemploApiClient$new() TemploApiClient$add_tag_with_sensor() TemploApiClient$add_species() TemploApiClient$add_tagged_individuals() TemploApiClient$add_single_record_and_fetch_id() TemploApiClient$get_sensor_types() TemploApiClient$get_tagged_individuals() TemploApiClient$get_environmental_readings() TemploApiClient$get_dataframe_end_point() TemploApiClient$delete_single_record() TemploApiClient$clone()","code":""},{"path":[]},{"path":"https://d2gex.github.io/temploapiclient/reference/TemploApiClient.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TemploApi class — TemploApiClient","text":"","code":"TemploApiClient$new(api_url)"},{"path":[]},{"path":"https://d2gex.github.io/temploapiclient/reference/TemploApiClient.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TemploApi class — TemploApiClient","text":"","code":"TemploApiClient$add_tag_with_sensor(   df,   tag_prefix,   sensor_prefix,   field_names,   end_point = \"tags_with_sensors/\" )"},{"path":"https://d2gex.github.io/temploapiclient/reference/TemploApiClient.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TemploApi class — TemploApiClient","text":"end_point string name end point queried. Default \"tags_with_sensors/\" obj nested list resulting applying NestedListBuilder","code":""},{"path":[]},{"path":"https://d2gex.github.io/temploapiclient/reference/TemploApiClient.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"TemploApi class — TemploApiClient","text":"","code":"TemploApiClient$add_species(df, end_point = \"species/\")"},{"path":[]},{"path":"https://d2gex.github.io/temploapiclient/reference/TemploApiClient.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"TemploApi class — TemploApiClient","text":"","code":"TemploApiClient$add_tagged_individuals(   df,   individual_prefix,   tag_prefix,   sensor_prefix,   tagged_individual_prefix,   field_names,   end_point = \"tagged_individuals/\" )"},{"path":"https://d2gex.github.io/temploapiclient/reference/TemploApiClient.html","id":"method-add-single-record-and-fetch-id-","dir":"Reference","previous_headings":"","what":"Method add_single_record_and_fetch_id()","title":"TemploApi class — TemploApiClient","text":"General method add single record database API","code":""},{"path":"https://d2gex.github.io/temploapiclient/reference/TemploApiClient.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"TemploApi class — TemploApiClient","text":"","code":"TemploApiClient$add_single_record_and_fetch_id(end_point, data)"},{"path":"https://d2gex.github.io/temploapiclient/reference/TemploApiClient.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"TemploApi class — TemploApiClient","text":"end_point string name end point queried. data flat list fields record sent.","code":""},{"path":[]},{"path":"https://d2gex.github.io/temploapiclient/reference/TemploApiClient.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"TemploApi class — TemploApiClient","text":"","code":"TemploApiClient$get_sensor_types(end_point = \"sensortypes/\")"},{"path":[]},{"path":"https://d2gex.github.io/temploapiclient/reference/TemploApiClient.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"TemploApi class — TemploApiClient","text":"","code":"TemploApiClient$get_tagged_individuals(end_point = \"tagged_individuals/\")"},{"path":"https://d2gex.github.io/temploapiclient/reference/TemploApiClient.html","id":"method-get-environmental-readings-","dir":"Reference","previous_headings":"","what":"Method get_environmental_readings()","title":"TemploApi class — TemploApiClient","text":"Get environmental data API emitted receptors","code":""},{"path":"https://d2gex.github.io/temploapiclient/reference/TemploApiClient.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"TemploApi class — TemploApiClient","text":"","code":"TemploApiClient$get_environmental_readings(   end_point = \"environmental_readings/data_exports/\",   from_date,   to_date )"},{"path":"https://d2gex.github.io/temploapiclient/reference/TemploApiClient.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"TemploApi class — TemploApiClient","text":"end_point string name end point queried. from_date yms format string start date to_date yms format string end_date","code":""},{"path":"https://d2gex.github.io/temploapiclient/reference/TemploApiClient.html","id":"method-get-dataframe-end-point-","dir":"Reference","previous_headings":"","what":"Method get_dataframe_end_point()","title":"TemploApi class — TemploApiClient","text":"General method get data API dataframe format.","code":""},{"path":"https://d2gex.github.io/temploapiclient/reference/TemploApiClient.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"TemploApi class — TemploApiClient","text":"","code":"TemploApiClient$get_dataframe_end_point(end_point, parameters = NULL)"},{"path":"https://d2gex.github.io/temploapiclient/reference/TemploApiClient.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"TemploApi class — TemploApiClient","text":"end_point string name end point queried. parameters named list potential parameters pass API query. Default NULL","code":""},{"path":"https://d2gex.github.io/temploapiclient/reference/TemploApiClient.html","id":"method-delete-single-record-","dir":"Reference","previous_headings":"","what":"Method delete_single_record()","title":"TemploApi class — TemploApiClient","text":"General method delete data API.","code":""},{"path":"https://d2gex.github.io/temploapiclient/reference/TemploApiClient.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"TemploApi class — TemploApiClient","text":"","code":"TemploApiClient$delete_single_record(end_point, data)"},{"path":"https://d2gex.github.io/temploapiclient/reference/TemploApiClient.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"TemploApi class — TemploApiClient","text":"end_point string name end point queried. data flat list unique fields identifying record deleted","code":""},{"path":"https://d2gex.github.io/temploapiclient/reference/TemploApiClient.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TemploApi class — TemploApiClient","text":"objects class cloneable method.","code":""},{"path":"https://d2gex.github.io/temploapiclient/reference/TemploApiClient.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"TemploApi class — TemploApiClient","text":"","code":"TemploApiClient$clone(deep = FALSE)"},{"path":"https://d2gex.github.io/temploapiclient/reference/TemploApiClient.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"TemploApi class — TemploApiClient","text":"deep Whether make deep clone.","code":""},{"path":"https://d2gex.github.io/temploapiclient/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://d2gex.github.io/temploapiclient/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://d2gex.github.io/temploapiclient/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://d2gex.github.io/temploapiclient/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""}]
