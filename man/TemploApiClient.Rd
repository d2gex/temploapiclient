% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/templo_api_client.R
\name{TemploApiClient}
\alias{TemploApiClient}
\title{TemploApi class}
\value{
TRUE or FALSE

TRUE or FALSE

record with the data being sent plus the unique identifier generated by the remote database

a dataframe with the sought information.

a dataframe with the sought information.

a dataframe with the sought information.

a dataframe with the sought information.

TRUE if successfully completed. Error message otherwise.
}
\description{
API client to consume TEMPLO's API
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-TemploApiClient-new}{\code{TemploApiClient$new()}}
\item \href{#method-TemploApiClient-add_species}{\code{TemploApiClient$add_species()}}
\item \href{#method-TemploApiClient-add_tagged_individuals}{\code{TemploApiClient$add_tagged_individuals()}}
\item \href{#method-TemploApiClient-add_single_record_and_fetch_id}{\code{TemploApiClient$add_single_record_and_fetch_id()}}
\item \href{#method-TemploApiClient-get_sensor_types}{\code{TemploApiClient$get_sensor_types()}}
\item \href{#method-TemploApiClient-get_tagged_individuals}{\code{TemploApiClient$get_tagged_individuals()}}
\item \href{#method-TemploApiClient-get_environmental_readings}{\code{TemploApiClient$get_environmental_readings()}}
\item \href{#method-TemploApiClient-get_dataframe_end_point}{\code{TemploApiClient$get_dataframe_end_point()}}
\item \href{#method-TemploApiClient-delete_single_record}{\code{TemploApiClient$delete_single_record()}}
\item \href{#method-TemploApiClient-clone}{\code{TemploApiClient$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TemploApiClient-new"></a>}}
\if{latex}{\out{\hypertarget{method-TemploApiClient-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TemploApiClient$new(api_url)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TemploApiClient-add_species"></a>}}
\if{latex}{\out{\hypertarget{method-TemploApiClient-add_species}{}}}
\subsection{Method \code{add_species()}}{
Add a dataframe of unique species to the database through the API. One insertion is done per species.
Species failing to be inserted for whatever reason will be reported to the stdout, along with each error. Those
sucesfully inserted will be listed. In case either none or all were inserted, the final output will report it so.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TemploApiClient$add_species(df, end_point = "species/")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{end_point}}{string with the name of the end point being queried.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TemploApiClient-add_tagged_individuals"></a>}}
\if{latex}{\out{\hypertarget{method-TemploApiClient-add_tagged_individuals}{}}}
\subsection{Method \code{add_tagged_individuals()}}{
Add a dataframe of tagged_individuals to the database through the API. One insertion is done per individual,
irrespective of how many rows such individual may have due to its associated sensors. Individuals failing to be
inserted for whatever reason will be reported to the stdout, along with each error. Those sucesfully inserted will
be listed. In case either none or all were inserted, the final output will report it so.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TemploApiClient$add_tagged_individuals(
  df,
  individual_prefix,
  tag_prefix,
  sensor_prefix,
  tagged_individual_prefix,
  field_names = c("individual_data", "tag_data", "sensors_data",
    "tagged_individual_data"),
  end_point = "tagged_individuals/"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{df}}{dataframe with pontetial multiple-row individuals (if multiple sensors); one row otherwise.}

\item{\code{individual_prefix}}{string identifying what columns belong to the individual dataset}

\item{\code{tag_prefix}}{string identifying what columns belong to the tag dataset}

\item{\code{sensor_prefix}}{string identifying what columns belong to the sensor dataset}

\item{\code{tagged_individual_prefix}}{string identifying what columns belong to the tagged_individual dataset}

\item{\code{field_names}}{a character vector containing what the names of the datasets to be sent to the API should be}

\item{\code{end_point}}{string with the name of the end point being queried.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TemploApiClient-add_single_record_and_fetch_id"></a>}}
\if{latex}{\out{\hypertarget{method-TemploApiClient-add_single_record_and_fetch_id}{}}}
\subsection{Method \code{add_single_record_and_fetch_id()}}{
General method to add a single record to the database through the API
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TemploApiClient$add_single_record_and_fetch_id(end_point, data)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{end_point}}{string with the name of the end point being queried.}

\item{\code{data}}{a flat list with the fields of the record being sent.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TemploApiClient-get_sensor_types"></a>}}
\if{latex}{\out{\hypertarget{method-TemploApiClient-get_sensor_types}{}}}
\subsection{Method \code{get_sensor_types()}}{
Get all sensor types currently in the database
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TemploApiClient$get_sensor_types(end_point = "sensortypes/")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{end_point}}{string with the name of the end point being queried.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TemploApiClient-get_tagged_individuals"></a>}}
\if{latex}{\out{\hypertarget{method-TemploApiClient-get_tagged_individuals}{}}}
\subsection{Method \code{get_tagged_individuals()}}{
Get all tagged individuals from the database. This operation may take a few seconds and makes
two API calls: one to get the tagged_individual data and another one to get the sensor types. The
final result is a merge between both retrieved datasets.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TemploApiClient$get_tagged_individuals(
  end_point,
  tagged_individual_fields = TAGGED_INDVIDUAL_FIELDS
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{end_point}}{string with the name of the end point being queried.}

\item{\code{tagged_individual_fields}}{list of sections and fields per section to be retrieved.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TemploApiClient-get_environmental_readings"></a>}}
\if{latex}{\out{\hypertarget{method-TemploApiClient-get_environmental_readings}{}}}
\subsection{Method \code{get_environmental_readings()}}{
Get environmental data from the API that were emitted by receptors
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TemploApiClient$get_environmental_readings(
  end_point = "environmental_readings/data_exports/",
  from_date,
  to_date
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{end_point}}{string with the name of the end point being queried.}

\item{\code{from_date}}{a yms format string start date}

\item{\code{to_date}}{a yms format string end_date}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TemploApiClient-get_dataframe_end_point"></a>}}
\if{latex}{\out{\hypertarget{method-TemploApiClient-get_dataframe_end_point}{}}}
\subsection{Method \code{get_dataframe_end_point()}}{
General method to get data from the API in a dataframe format.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TemploApiClient$get_dataframe_end_point(end_point, parameters = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{end_point}}{string with the name of the end point being queried.}

\item{\code{parameters}}{a named list with potential parameters to pass on to the API query. Default is NULL}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TemploApiClient-delete_single_record"></a>}}
\if{latex}{\out{\hypertarget{method-TemploApiClient-delete_single_record}{}}}
\subsection{Method \code{delete_single_record()}}{
General method to delete data from the API.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TemploApiClient$delete_single_record(end_point, data)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{end_point}}{string with the name of the end point being queried.}

\item{\code{data}}{a flat list with the unique fields identifying the record being deleted}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TemploApiClient-clone"></a>}}
\if{latex}{\out{\hypertarget{method-TemploApiClient-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TemploApiClient$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
